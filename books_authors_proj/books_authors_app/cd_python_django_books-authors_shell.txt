>>> newbook1 = books.objects.create(title="C Sharp")
>>> newbook2 = books.objects.create(title="Java")
>>> newbook3 = books.objects.create(title="Python")
>>> newbook4 = books.objects.create(title="PHP")
>>> newbook5 = books.objects.create(title="Ruby")
>>> author1 = authors.objects.create(first_name="Jane", last_name="Austen")
>>> author2 = authors.objects.create(first_name="Emily", last_name="Dickingson")
>>> author3 = authors.objects.create(first_name="Fyodor", last_name="Dostoevsky")
>>> author4 = authors.objects.create(first_name="William", last_name="Shakespear")
>>> author5 = authors.objects.create(first_name="Lau", last_name="Tzu")
>>> books.objects.all()
<QuerySet [<Book: C Sharp>, <Book: Java>, <Book: Python>, <Book: PHP>, <Book: Ruby>]>
>>> authors.objects.all()
<QuerySet [<Author: Jane Austen>, <Author: Emily Dickingson>, <Author: Fyodor Dostoevsky>, <Author: William Shakespear>, <Author: Lau Tzu>]>

(djangoPy3Env) ➜  books_authors_proj git:(main) ✗ python manage.py makemigrations
Migrations for 'books_authors_app':
  books_authors_app/migrations/0002_auto_20210310_0340.py
    - Add field notes to authors
    - Add field desc to books
(djangoPy3Env) ➜  books_authors_proj git:(main) ✗ python manage.py migrate       
Operations to perform:
  Apply all migrations: admin, auth, books_authors_app, contenttypes, sessions
Running migrations:
  Applying books_authors_app.0002_auto_20210310_0340... OK
(djangoPy3Env) ➜  books_authors_proj git:(main) ✗ 

>>> books.objects.all()
<QuerySet [<Book: C Sharp>, <Book: Java>, <Book: Python>, <Book: PHP>, <Book: Ruby>]>
>>> book1upd = books.objects.get(id=1)
>>> book1upd.title = "C#"
>>> book1upd.save()
>>> books.objects.all()
<QuerySet [<Book: C#>, <Book: Java>, <Book: Python>, <Book: PHP>, <Book: Ruby>]>
>>> book1 = books.objects.get(id=1)
>>> book2 = books.objects.get(id=2)
>>> book3 = books.objects.get(id=3)
>>> book4 = books.objects.get(id=4)
>>> book5 = books.objects.get(id=5)
>>> 
>>> author1 = authors.objects.get(id=1)
>>> author2 = authors.objects.get(id=2)
>>> author3 = authors.objects.get(id=3)
>>> author4 = authors.objects.get(id=4)
>>> author5 = authors.objects.get(id=5)
>>> 
>>> book1.authors.add(author1)
>>> book2.authors.add(author1)
>>> book1.authors.add(author2)
>>> book2.authors.add(author2)
>>> book3.authors.add(author2)
>>> 
>>> book1.authors.add(author3)
>>> book2.authors.add(author3)
>>> book3.authors.add(author3)
>>> book4.authors.add(author3)
>>> 
>>> book1.authors.add(author4)
>>> book2.authors.add(author4)
>>> book3.authors.add(author4)
>>> book4.authors.add(author4)
>>> book5.authors.add(author4
>>> 
>>> book3.authors.all()
<QuerySet [<Author: Emily Dickingson>, <Author: Fyodor Dostoevsky>, <Author: Bill Shakespear>]>
>>> book3.authors.remove(author2)
>>> book3.authors.all()
<QuerySet [<Author: Fyodor Dostoevsky>, <Author: Bill Shakespear>]>
>>> book2.authors.add(author5)
>>> author3.books.all()
<QuerySet [<Book: C#>, <Book: Java>, <Book: Python>, <Book: PHP>]>
>>> book5.authors.all()
<QuerySet [<Author: Bill Shakespear>]>